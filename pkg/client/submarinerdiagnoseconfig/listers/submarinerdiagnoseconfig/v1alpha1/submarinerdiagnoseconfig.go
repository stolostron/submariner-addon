// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/stolostron/submariner-addon/pkg/apis/submarinerdiagnoseconfig/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SubmarinerDiagnoseConfigLister helps list SubmarinerDiagnoseConfigs.
// All objects returned here must be treated as read-only.
type SubmarinerDiagnoseConfigLister interface {
	// List lists all SubmarinerDiagnoseConfigs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SubmarinerDiagnoseConfig, err error)
	// SubmarinerDiagnoseConfigs returns an object that can list and get SubmarinerDiagnoseConfigs.
	SubmarinerDiagnoseConfigs(namespace string) SubmarinerDiagnoseConfigNamespaceLister
	SubmarinerDiagnoseConfigListerExpansion
}

// submarinerDiagnoseConfigLister implements the SubmarinerDiagnoseConfigLister interface.
type submarinerDiagnoseConfigLister struct {
	indexer cache.Indexer
}

// NewSubmarinerDiagnoseConfigLister returns a new SubmarinerDiagnoseConfigLister.
func NewSubmarinerDiagnoseConfigLister(indexer cache.Indexer) SubmarinerDiagnoseConfigLister {
	return &submarinerDiagnoseConfigLister{indexer: indexer}
}

// List lists all SubmarinerDiagnoseConfigs in the indexer.
func (s *submarinerDiagnoseConfigLister) List(selector labels.Selector) (ret []*v1alpha1.SubmarinerDiagnoseConfig, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SubmarinerDiagnoseConfig))
	})
	return ret, err
}

// SubmarinerDiagnoseConfigs returns an object that can list and get SubmarinerDiagnoseConfigs.
func (s *submarinerDiagnoseConfigLister) SubmarinerDiagnoseConfigs(namespace string) SubmarinerDiagnoseConfigNamespaceLister {
	return submarinerDiagnoseConfigNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SubmarinerDiagnoseConfigNamespaceLister helps list and get SubmarinerDiagnoseConfigs.
// All objects returned here must be treated as read-only.
type SubmarinerDiagnoseConfigNamespaceLister interface {
	// List lists all SubmarinerDiagnoseConfigs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SubmarinerDiagnoseConfig, err error)
	// Get retrieves the SubmarinerDiagnoseConfig from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.SubmarinerDiagnoseConfig, error)
	SubmarinerDiagnoseConfigNamespaceListerExpansion
}

// submarinerDiagnoseConfigNamespaceLister implements the SubmarinerDiagnoseConfigNamespaceLister
// interface.
type submarinerDiagnoseConfigNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SubmarinerDiagnoseConfigs in the indexer for a given namespace.
func (s submarinerDiagnoseConfigNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SubmarinerDiagnoseConfig, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SubmarinerDiagnoseConfig))
	})
	return ret, err
}

// Get retrieves the SubmarinerDiagnoseConfig from the indexer for a given namespace and name.
func (s submarinerDiagnoseConfigNamespaceLister) Get(name string) (*v1alpha1.SubmarinerDiagnoseConfig, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("submarinerdiagnoseconfig"), name)
	}
	return obj.(*v1alpha1.SubmarinerDiagnoseConfig), nil
}
