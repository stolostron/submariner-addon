apiVersion: submariner.io/v1alpha1
kind: Submariner
metadata:
  name: submariner
  namespace: {{ .InstallationNamespace }}
spec:
  broker: k8s
  brokerK8sApiServer: {{ .BrokerAPIServer }}
  brokerK8sApiServerToken: {{ .BrokerToken }}
  brokerK8sCA: {{ .BrokerCA }}
  brokerK8sRemoteNamespace: {{ .BrokerNamespace }}
  brokerK8sInsecure: {{ .InsecureBrokerConnection }}
  cableDriver: {{ .CableDriver }}
  ceIPSecDebug: {{ .IPSecDebug }}
  ceIPSecNATTPort: {{ .IPSecNATTPort }}
  ceIPSecPSK: {{ .IPSecPSK }}
  clusterCIDR: ""
  globalCIDR: "{{ .GlobalCIDR }}"
  airGappedDeployment: {{ .AirGappedDeployment }}
  loadBalancerEnabled: {{ .LoadBalancerEnabled }}
  clusterID: {{ .ClusterName }}
  colorCodes: blue
  debug: {{ .Debug }}
  namespace: {{ .InstallationNamespace }}
  natEnabled: {{ .NATEnabled }}
  serviceCIDR: ""
  serviceDiscoveryEnabled: true
{{- if or .SubmarinerGatewayImage .SubmarinerRouteAgentImage .SubmarinerGlobalnetImage .LighthouseAgentImage .LighthouseCoreDNSImage }}
  imageOverrides:
    {{- if .SubmarinerGatewayImage }}
    submariner-gateway: {{ .SubmarinerGatewayImage }}
    {{- end}}
    {{- if .SubmarinerRouteAgentImage }}
    submariner-routeagent: {{ .SubmarinerRouteAgentImage }}
    {{- end}}
    {{- if .SubmarinerGlobalnetImage }}
    submariner-globalnet: {{ .SubmarinerGlobalnetImage }}
    {{- end}}
    {{- if .SubmarinerNetworkPluginSyncerImage }}
    submariner-networkplugin-syncer: {{ .SubmarinerNetworkPluginSyncerImage }}
    {{- end}}
    {{- if .LighthouseAgentImage }}
    submariner-lighthouse-agent: {{ .LighthouseAgentImage }}
    {{- end}}
    {{- if .LighthouseCoreDNSImage }}
    submariner-lighthouse-coredns: {{ .LighthouseCoreDNSImage }}
    {{- end}}
    {{- if .MetricsProxyImage }}
    submariner-metrics-proxy: {{ .MetricsProxyImage }}
    {{- end}}
    {{- if .NettestImage }}
    submariner-nettest: {{ .NettestImage }}
    {{- end}}
{{- end}}
  repository: registry.redhat.io/rhacm2
  {{- if .NodeSelector }}
  nodeSelector:
  {{- range $key, $value := .NodeSelector }}
    "{{ $key }}": "{{ $value }}"
  {{- end }}
  {{- end }}
  {{- if .Tolerations }}
  tolerations:
  {{- range $toleration := .Tolerations }}
  {{- if $toleration.Key }}
  - key: "{{ $toleration.Key }}"
  {{- if $toleration.Operator }}
    operator: "{{ $toleration.Operator }}"
  {{- end }}
  {{- else }}
  - operator: "{{ $toleration.Operator }}"
  {{- end }}
  {{- if $toleration.Value }}
    value: "{{ $toleration.Value }}"
  {{- end }}
  {{- if $toleration.Effect }}
    effect: "{{ $toleration.Effect }}"
  {{- end }}
  {{- if $toleration.TolerationSeconds }}
    tolerationSeconds: {{ $toleration.TolerationSeconds }}
  {{- end }}
  {{- end }}
  {{- end }}